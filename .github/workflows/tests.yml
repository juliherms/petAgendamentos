name: CI - Maven Tests (Java 21)

on:
  push:
    branches: [ "**" ]
    paths:
      - "pom.xml"
      - "src/**"
      - ".github/workflows/tests.yml"
  pull_request:
    branches: [ "**" ]
    paths:
      - "pom.xml"
      - "src/**"

permissions:
  contents: read

concurrency:
  group: ci-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      MAVEN_OPTS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 -Xmx2g -Dstyle.color=always"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 21 (Temurin) + cache Maven
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Make Maven Wrapper executable
        run: chmod +x ./mvnw

      - name: Show Java & Maven versions
        run: |
          java -version
          if [ -f ./mvnw ]; then ./mvnw -v; else mvn -v; fi

      - name: Start MySQL with Docker Compose
        run: |
          # Verifica se Docker está disponível
          docker --version
          docker compose version
          
          # Inicia MySQL
          docker compose up -d mysql
          
          # Aguarda MySQL estar pronto (usando root primeiro)
          echo "Waiting for MySQL to be ready..."
          timeout 120 bash -c 'until docker exec pets-mysql mysqladmin ping -h"localhost" -u"root" -p"root" --silent; do sleep 3; echo "Waiting..."; done'
          
          # Aguarda um pouco mais para garantir que o usuário pets_user foi criado
          sleep 10
          
          # Verifica se o usuário pets_user existe e pode conectar
          echo "Verifying pets_user connection..."
          timeout 30 bash -c 'until docker exec pets-mysql mysql -u pets_user -ppets_pass -e "SELECT 1;" --silent; do sleep 2; echo "Waiting for pets_user..."; done'
          
          echo "MySQL is ready!"

      - name: Show MySQL status
        run: |
          docker compose ps
          echo "Testing connection with pets_user..."
          docker exec pets-mysql mysql -u pets_user -ppets_pass -e "SHOW DATABASES;"
          echo "Connection successful!"

      - name: Build & run tests (unit + component)
        run: |
          if [ -f ./mvnw ]; then MVN=./mvnw; else MVN=mvn; fi
          $MVN -B -ntp -U clean verify -Dspring.profiles.active=test-mysql

      # Publica relatórios de testes sempre (útil para debugar falhas no PR)
      - name: Upload Surefire/Failsafe reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maven-test-reports
          path: |
            **/target/surefire-reports/**
            **/target/failsafe-reports/**
          if-no-files-found: ignore
